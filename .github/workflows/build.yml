# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Python Release Build
on:
  pull_request:
    branches: ["main"]
  push:
    tags: ["*-rc*"]
    branches: ["main"]

jobs:
  generate-license:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Generate license file
        run: python ./dev/create_license.py
      - uses: actions/upload-artifact@v3
        with:
          name: python-wheel-license
          path: LICENSE.txt

  build:
    name: Build on ${{ matrix.platform || matrix.os }} (${{ matrix.target }} - ${{ matrix.manylinux || 'auto' }})
    needs: [generate-license]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        target: [x86_64, aarch64]
        manylinux: [auto]
        include:
          - os: ubuntu
            platform: linux
          - os: windows
            ls: dir
            interpreter: 3.7 3.8 3.9 3.10 3.11
          - os: windows
            ls: dir
            target: i686
            python-architecture: x86
            interpreter: 3.7 3.8 3.9 3.10 3.11
          - os: macos
            target: aarch64
            interpreter: 3.7 3.8 3.9 3.10 3.11
          - os: ubuntu
            platform: linux
            target: i686
          # GCC 4.8.5 in manylinux2014 container doesn't support c11 atomic
          # we use manylinux_2_24 container for aarch64 and armv7 targets instead,
          - os: ubuntu
            platform: linux
            target: aarch64
            container: messense/manylinux_2_24-cross:aarch64
          - os: ubuntu
            platform: linux
            target: armv7
            container: messense/manylinux_2_24-cross:armv7
            interpreter: 3.7 3.8 3.9 3.10 3.11
        exclude:
            # Windows on arm64 only supports Python 3.11+
            - os: windows
              target: aarch64

    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Twine
        run: pip install -U twine

      - run: rm LICENSE.txt
      - name: Download LICENSE.txt
        uses: actions/download-artifact@v3
        with:
          name: python-wheel-license
          path: .

      - name: Build sdist
        if: ${{ matrix.os == 'ubuntu' && matrix.target == 'x86_64' && matrix.manylinux == 'auto' }}
        uses: messense/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          rust-toolchain: stable

      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: nightly
          maturin-version: '0.14.13'
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux || 'auto' }}
          container: ${{ matrix.container }}
          args: --release --out dist --interpreter ${{ matrix.interpreter || '3.7 3.8 3.9 3.10 3.11 pypy3.7 pypy3.8 pypy3.9' }}

      - name: List build output
        run: ${{ matrix.ls || 'ls -lh' }} dist/

      - name: Check build output
        run: twine check --strict dist/*

      - name: Archive wheels
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: target/wheels/*

  # NOTE: PyPI publish needs to be done manually for now after release passed the vote
  # release:
  #   name: Publish in PyPI
  #   needs: [build-manylinux, build-python-mac-win]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v3
  #     - name: Publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         user: __token__
  #         password: ${{ secrets.pypi_password }}
